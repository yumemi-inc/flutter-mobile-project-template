name: template_workspace
environment:
  sdk: ^3.6.0

workspace:
  # apps
  - apps/app
  - apps/catalog
  - apps/website
  # cores
  - packages/cores/core
  - packages/cores/data
  - packages/cores/designsystem
  - packages/cores/model
  - packages/cores/ui
  # features
  - packages/features/debug_mode
  - packages/features/force_update
  - packages/features/maintain
  - packages/features/setting
  - packages/features/webview
  # samples
  - packages/samples/github_repository
  - samples/github_app
  # utils
  - packages/utils/pagination

dev_dependencies:
  mason_cli: ^0.1.0-dev.55
  melos: ^7.0.0-dev.7
  path: ^1.9.1
  yaml: ^3.1.3
  yaml_edit: ^2.2.2

dependency_overrides:
  file: ^7.0.0
  path: ^1.9.1

melos:
  sdkPath: .fvm/flutter_sdk

  ide:
    intellij:
      # Disabling IntelliJ's automatic configuration.
      # This is to support different build configurations for environments.
      enabled: false

  command:
    bootstrap:
      environment:
        sdk: ^3.6.0
        flutter: ^3.27.1
      dependencies:
        flutter_hooks: ^0.20.5
        flutter_riverpod: ^2.6.1
        freezed_annotation: ^2.4.4
        hooks_riverpod: ^2.5.1
        intl: ^0.19.0
        json_annotation: ^4.9.0
        riverpod_annotation: ^2.6.1
        go_router: ^14.6.3
      dev_dependencies:
        build_runner: ^2.4.14
        custom_lint: ^0.7.0
        freezed: ^2.5.7
        json_serializable: ^6.8.0
        riverpod_generator: ^2.4.0
        riverpod_lint: ^2.3.10
        yumemi_lints: ^2.2.0
        test: ^1.25.2
        flutter_gen_runner: ^5.8.0
      hooks:
        post: melos run bootstrap:post

  scripts:
    # bootstrap 後に実行する script 群
    bootstrap:post:
      description: bootstrap post hooks
      steps:
        # TODO(tatsutakein): yumemi_lints が最新バージョンに対応した際に再度有効化する
        # - update:yumemi_lints
        - gen:labeler
        - gen:labels

    fix:
      description: |
        すべてのパッケージに `dart fix --apply` を実行します。
        analyze の対象として開発者が気づけるようにしつつ fix からは対象外とするため独自実装です。
      run: bash "$MELOS_ROOT_PATH/scripts/fix.sh"
    fix:custom:
      description: すべてのパッケージに custom_lint の fix を実行します。
      exec: dart run custom_lint --fix
      packageFilters:
        dirExists: lib
        dependsOn: custom_lint

    gen:
      description: build_runner と l10n の生成コマンドを実行します。
      steps:
        - gen:l10n
        - gen:build
    gen:build:
      description: build_runner を使用してコードを生成します。
      run: dart run build_runner build -d
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: build_runner
    gen:l10n:
      description: 多言語対応のためのローカライゼーションファイルを生成します。
      run: flutter gen-l10n
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: flutter_localizations
    gen:labeler:
      description: '`.github/labeler.yml` のパッケージ部分を生成します。'
      run: dart run ./tools/gen_labeler.dart
    gen:labels:
      description: '`.github/labels.yml` のパッケージ部分を生成します。'
      run: dart run ./tools/gen_labels.dart

    upgrade:
      description: dart pub のバージョンアップを実施します。
      run: dart pub upgrade
      exec:
        concurrency: 1
        orderDependents: true
    upgrade:major:
      description: dart pub のメジャーバージョンアップを実施します。
      run: dart pub upgrade --major-versions
      exec:
        concurrency: 1
        orderDependents: true
    update:yumemi_lints:
      description: yumemi_lints の更新を実行します。
      exec: dart run yumemi_lints update
      packageFilters:
        dependsOn: yumemi_lints

    # dependsOn で or 条件で指定することができないため
    # スクリプトを Flutter と Dart に分けている
    test:
      description: すべてのパッケージのテストを実行します。
      steps:
        - test:flutter
        - test:dart
    test:flutter:
      description: Flutter パッケージのテストを実行します。
      run: flutter test
      exec:
        concurrency: 1
      packageFilters:
        dependsOn: flutter_test
        dirExists: test
        ignore:
          - catalog
    test:dart:
      description: Dart パッケージのテストを実行します。
      run: dart test
      exec:
        concurrency: 1
      packageFilters:
        dependsOn: test
        dirExists: test

    # dependsOn で or 条件で指定することができないため
    # スクリプトを Flutter と Dart に分けている
    report:test:
      description: すべてのパッケージのテストレポートを生成します。
      steps:
        - report:test:flutter
        - report:test:dart
    report:test:flutter:
      description: Flutter パッケージのテストレポートを生成します。
      run: flutter test --no-pub --machine > test_report.log
      exec:
        concurrency: 1
      packageFilters:
        dependsOn: flutter_test
        dirExists: test
        ignore:
          - catalog
    report:test:dart:
      description: Dart パッケージのテストレポートを生成します。
      run: dart test --file-reporter="json:test_report.log"
      exec:
        concurrency: 1
      packageFilters:
        dependsOn: test
        dirExists: test

    ci:report:custom_lint:
      description: CI 環境で custom_lint のレポートを生成します。
      exec: bash "$MELOS_ROOT_PATH/scripts/report-custom-lint-ci.sh"
      packageFilters:
        dependsOn: custom_lint
    ci:update:issue:
      description: CI 環境でパッケージの更新状況を確認し、アップデートが必要なパッケージをIssueとして作成します。
      run: bash "$MELOS_ROOT_PATH/scripts/update-issues.sh"
      exec:
        concurrency: 1
        orderDependents: true
      packageFilters:
        dirExists: lib

    golden_test:ci:
      description: golden_test を実行します。
      run: flutter test --tags golden
      exec:
        failFast: true
      packageFilters:
        scope:
          - catalog
    golden_test:
      description: golden_test を実行し, ファイルを生成します。
      run: flutter test --update-goldens
      exec:
        failFast: true
      packageFilters:
        scope:
          - catalog
