name: Issue-Dependabot

on:
  schedule:
    - cron: "0 0 * * 1" # 日本標準時間 毎週月曜日の朝9:00

env:
  ISSUE_LABEL: package_update

jobs:
  dependabot:
    runs-on: ubuntu-24.04
    permissions:
      issues: write
    timeout-minutes: 5
    steps:
      # https://github.com/marketplace/actions/checkout
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Application Runtime
        uses: ./.github/actions/setup-application-runtime

      - name: Check for package updates
        id: package
        run: |
          update=$(dart run ./tools/update_package.dart)

          if [ -z "$update" ]; then
            echo "No update"
            exit 0;
          fi

          path="$GITHUB_WORKSPACE/package_$(date +%Y%m%d%H%M%S)"
          echo "$update" > "$path"
          echo "path=$path" >> "$GITHUB_OUTPUT"

      - name: Get Issue Number
        id: issue
        if: "${{ steps.package.outputs.path != '' }}"
        run: |
          getIssueNumber() {
            issue_numbers=$(gh issue list --label "$ISSUE_LABEL" --json number | jq '.[].number')

            issue_numbers_length=$(echo "$issue_numbers" | grep -c .)
            if [ "$issue_numbers_length" -gt 1 ]; then
              echo "Multiple issues exist. Please check the issue."
              exit 1
            elif [ "$issue_numbers_length" -eq 0 ]; then
              issue_url=$(gh issue create --title "Update package" --label "$ISSUE_LABEL" --body-file ./tools/templates/issue_improve.md)
              issue_number=$(echo "$issue_url" | sed -E 's/.*\/issues\/([0-9]+)$/\1/')
              echo "$issue_number"
            else
              echo "$issue_numbers"
            fi
          }

          issue_number=$(getIssueNumber)

          echo "Issue Number: $issue_number"
          echo "number=$issue_number" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the latest issue comment
        id: latest
        run: |
          comment=$(gh issue view "${{ steps.issue.outputs.number }}" --json comments -q '.comments | last.body')

          path="$GITHUB_WORKSPACE/comment_$(date +%Y%m%d%H%M%S)"
          echo "$comment" > "$path"
          echo "path=$path" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if the latest comment is the same as the current comment
        id: comment_check
        run: |
          package_comment=$(cat "${{ steps.package.outputs.path }}")
          latest_comment=$(cat "${{ steps.latest.outputs.path }}")

          if [[ "$package_comment" == "$latest_comment" ]]; then
            echo "The latest comment is the same as the current comment"
            exit 0
          fi

          echo "The latest comment is different from the current comment"
          echo "changed=true" >> "$GITHUB_OUTPUT"

      - name: Comment
        if: ${{ steps.comment_check.outputs.changed == 'true' }}
        run: gh issue comment "${{ steps.issue.outputs.number  }}" --body-file "${{ steps.package.outputs.path }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
